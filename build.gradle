plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}-fabric"
group = project.maven_group

minecraft {
    refmapName = archives_base_name.toLowerCase() + '-refmap.json'
}

repositories {
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this line, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from "LICENSE.txt"
}

publishing {
    tasks.publish.dependsOn 'build'

    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy sourcesJar
            }
        }
    }

    // Select the repositories you want to publish to
    // To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
    repositories {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

def ENV = System.getenv()

def getShortMcVersion() {
    return project.minecraft_version.substring(0, 4)
}

task publishModrinth(type: com.modrinth.minotaur.TaskModrinthUpload) {
    onlyIf {
        ENV.MODRINTH_TOKEN
    }

    token = ENV.MODRINTH_TOKEN
    projectId = 'xQgFileM'
    versionNumber = "${project.mod_version}+${getShortMcVersion()}"
    versionName = "[${getShortMcVersion()}] Right-Click-Harvest v${project.mod_version}"
    versionType = "RELEASE"

    uploadFile = remapJar
    addGameVersion("1.16.1")
    addGameVersion("1.16.2")
    addGameVersion("1.16.3")
    addGameVersion("1.16.4")
    addGameVersion("1.16.5")
    addLoader('fabric')
}

curseforge {
    if (ENV.CURSEFORGE_TOKEN)
        apiKey = ENV.CURSEFORGE_TOKEN

    project {
        id = "${curse_id}"
        changelog = "A changelog can be found at https://github.com/koelle25/Right-Click-Harvest/releases"
        releaseType = "release"

        addGameVersion "1.16.1"
        addGameVersion "1.16.2"
        addGameVersion "1.16.3"
        addGameVersion "1.16.4"
        addGameVersion "1.16.5"
        addGameVersion "Java 8"
        addGameVersion "Fabric"

        addArtifact sourcesJar

        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }

    options {
        forgeGradleIntegration = false
    }
}
